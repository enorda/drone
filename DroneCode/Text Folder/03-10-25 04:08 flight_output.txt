Waiting for serial connection...
Serial connection established successfully.
Closed serial connection.
Search ready
W:5.141332824271612H:2.520747137554955
Starting Location: , (32.9937804, -96.7538311)
Heading:  162
The drone is now armable
The drone is not in guided mode yet
The drone is now in guided mode
Waiting for drone to arm:  {'STANDBY'}
Waiting for drone to arm:  {'STANDBY'}
The drone has now been armed
Copter GPS Ready
gpsfixed
getting the cmds position
cmds: <dronekit.CommandSequence object at 0xffffa64e2590>
Mission commands:
1, 32.993873596191406, -96.75382995605469, 100.0
2, 32.99386978149414, -96.75370788574219, 100.0
3, 32.993743896484375, -96.75370788574219, 100.0
4, 32.99374771118164, -96.75384521484375, 100.0
5, 32.993812561035156, -96.7536392211914, 100.0
Home Location: Latitude=32.993778228759766, Longitude=-96.75382995605469, Altitude=209.5800018310547
Horiz: 11.39246838525993, Vert: 13.997774427034093 
0.00012212990259996125
0.000125885009765625
[[ 32.99386978 -96.75370789]
 [ 32.9938736  -96.75382996]
 [ 32.99374771 -96.75382996]
 [ 32.9937439  -96.75370789]]
Waypoints saved to generated_search_pattern_waypoints.csv
[[1, 32.993873596191406, -96.75382995605469, 100.0], [2, 32.99386978149414, -96.75370788574219, 100.0], [3, 32.993743896484375, -96.75370788574219, 100.0], [4, 32.99374771118164, -96.75384521484375, 100.0], [5, 32.993812561035156, -96.7536392211914, 100.0]]
fence: (32.993873596191406, -96.75382995605469)
fence: (32.99386978149414, -96.75370788574219)
fence: (32.993743896484375, -96.75370788574219)
fence: (32.99374771118164, -96.75384521484375)
Set default/target airspeed to 3
Set default/target airspeed to 3
Taking off!
 Altitude:  -0.018
 Altitude:  -0.01
 Altitude:  0.367
 Altitude:  1.021
 Altitude:  1.744
 Altitude:  2.51
 Altitude:  3.271
 Altitude:  3.747
 Altitude:  3.743
 Altitude:  3.564
 Altitude:  3.457
 Altitude:  3.455
 Altitude:  3.486
 Altitude:  3.514
 Altitude:  3.503
 Altitude:  3.5
 Altitude:  3.5
 Altitude:  3.48
 Altitude:  3.48
 Altitude:  3.49
 Altitude:  3.494
 Altitude:  3.506
 Altitude:  3.512
 Altitude:  3.523
 Altitude:  3.52
 Altitude:  3.507
 Altitude:  3.527
 Altitude:  3.513
 Altitude:  3.519
 Altitude:  3.518
 Altitude:  3.519
 Altitude:  3.508
 Altitude:  3.502
 Altitude:  3.502
 Altitude:  3.51
 Altitude:  3.518
 Altitude:  3.513
 Altitude:  3.514
 Altitude:  3.512
 Altitude:  3.51
 Altitude:  3.511
 Altitude:  3.515
 Altitude:  3.516
 Altitude:  3.518
 Altitude:  3.526
 Altitude:  3.525
 Altitude:  3.53
 Altitude:  3.52
 Altitude:  3.528
 Altitude:  3.547
 Altitude:  3.527
 Altitude:  3.528
 Altitude:  3.729
 Altitude:  2.515
 Altitude:  2.294
 Altitude:  3.044
 Altitude:  2.636
 Altitude:  2.118
 Altitude:  1.689
 Altitude:  1.033
 Altitude:  0.494
 Altitude:  0.105
 Altitude:  -0.096
 Altitude:  -0.079
 Altitude:  -0.055
 Altitude:  -0.034
 Altitude:  -0.025
 Altitude:  -0.025
 Altitude:  -0.032
 Altitude:  -0.031
 Altitude:  -0.022
 Altitude:  -0.008
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/enorda/DroneCodeRepo/drone/DroneCode/IntegratedUAVcode.py", line 185, in drone_control
    takeoff_drone(vehicle, ALTITUDE)
  File "/home/enorda/DroneCodeRepo/drone/DroneCode/DroneProcess.py", line 88, in takeoff_drone
    time.sleep(1)
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/enorda/DroneCodeRepo/drone/DroneCode/IntegratedUAVcode.py", line 344, in <module>
    camera_process.join()
  File "/usr/lib/python3.10/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/usr/lib/python3.10/multiprocessing/popen_fork.py", line 43, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
  File "/usr/lib/python3.10/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
KeyboardInterrupt
Comms Ready
Process Process-3:
Traceback (most recent call last):
  File "/usr/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/enorda/DroneCodeRepo/drone/DroneCode/IntegratedUAVcode.py", line 204, in search_algorithm
    if not marker_queue.empty():
  File "/usr/lib/python3.10/multiprocessing/queues.py", line 129, in empty
    return not self._poll()
  File "/usr/lib/python3.10/multiprocessing/connection.py", line 253, in poll
    def poll(self, timeout=0.0):
KeyboardInterrupt
Process Process-4:
Traceback (most recent call last):
  File "/usr/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/enorda/DroneCodeRepo/drone/DroneCode/IntegratedUAVcode.py", line 281, in comms
    if not location_queue.empty():
  File "/usr/lib/python3.10/multiprocessing/queues.py", line 129, in empty
    return not self._poll()
  File "/usr/lib/python3.10/multiprocessing/connection.py", line 257, in poll
    return self._poll(timeout)
  File "/usr/lib/python3.10/multiprocessing/connection.py", line 424, in _poll
    r = wait([self], timeout)
  File "/usr/lib/python3.10/multiprocessing/connection.py", line 923, in wait
    with _WaitSelector() as selector:
  File "/usr/lib/python3.10/selectors.py", line 349, in __init__
    super().__init__()
  File "/usr/lib/python3.10/selectors.py", line 214, in __init__
    self._map = _SelectorMapping(self)
KeyboardInterrupt
Camera ready
Initializing camera...
Camera initialized
Saving video to: /home/enorda/DroneCodeRepo/drone/DroneCode/Recording Folder/03-10-25 04:08 Record_while_flying.avi
Process Process-2:
Traceback (most recent call last):
  File "/usr/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/enorda/DroneCodeRepo/drone/DroneCode/IntegratedUAVcode.py", line 242, in camera_run
    video_writer.write(frame)  # Write the frame to the output file
KeyboardInterrupt
